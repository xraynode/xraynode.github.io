<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://xraynode.github.io/news/article-25922.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Kafka核心组件详解_在线工具</title>
        <meta name="description" content="1.删除策略  2.压缩策略 目录  			  对于Kafka的学习，在研究其系统模块时，有些核心组件是指的我们去了解。今天给大家来剖析一下Kafka的一些核心组件，让大家能够更好的理解Kafka的运" />
        <link rel="icon" href="/assets/website/img/xraynode/favicon.ico" type="image/x-icon"/>
    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Font-Awesome-Icons-CSS -->
    <link rel="stylesheet" href="/assets/website/css/xraynode/fontawesome-all.min.css">
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/xraynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KX80YQ9BLW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KX80YQ9BLW');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0">
                                    <a class="navbar-brand" href="/">
                        XRay Node
                    </a>
                                    
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>

                    </ul>
                </div>
                <!-- //search button -->
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->

    <!-- inner banner -->
    <section class="inner-banner py-5">
        <div class="w3l-breadcrumb py-lg-5">
            <div class="container pt-4 pb-sm-4">
                <h1 class="inner-text-title font-weight-bold pt-5">Kafka核心组件详解_在线工具</h1>
                <ul class="breadcrumbs-custom-path mt-3">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><i class="fas fa-angle-right mx-2"></i>新闻资讯</a></li>
                    <li class="active"><i class="fas fa-angle-right mx-2"></i>正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //inner banner -->

    <!-- video section -->
    <section class="w3l-ab-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                      				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> <a href="#title-0" title="1.删除策略">1.删除策略</a></li> <li><i class="be be-arrowright"></i> <a href="#title-1" title="2.压缩策略">2.压缩策略</a></li> </ul><span class="log-zd"><span class="log-close"><a title="隐藏目录"><i class="be be-cross"></i><strong>目录</strong></a></span></span></div>  			</div> </h1> <p>对于Kafka的学习，在研究其系统模块时，有些核心组件是指的我们去了解。今天给大家来剖析一下Kafka的一些核心组件，让大家能够更好的理解Kafka的运作流程。</p> </h1> <p>Kafka系统设计的非常优秀，它的核心组件由生产者、消费者、主题、代理节点、以及Zookeeper组成。这些核心组件彼此独立、却又相互存在一定的联系来支持Kafka系统正常运作。</p> <h2>2.1 核心组件术语</h2> <h3>2.1.1 生产者</h3> <p>生产者即消息数据产生的来源头，通常情况下，将原始数据（如数据库、审计日志、系统日志）写入到Kafka系统的应用程序称之为生产者实例。</p> <p>生产者的主要作用是发送业务数据到Kafka系统，它在Kafka系统中承担着“搬运工”的角色，负责将分布在不同地方的原始数据，集中“搬运”到Kafka系统中进行存储。</p> <h3>2.1.2 消费者</h3> <p>消费者即消息数据流出的出口，通常情况下，读取Kafka系统中业务数据的应用程序被称为消费者实例。 </p> <p>消费者的主要作用是读取Kafka系统中的业务数据，然后在消费者实例中经过逻辑处理后将结果写到不同的及时查询存储介质中。例如，将经过处理后的结果分别写入到分布式文件系统（HDFS）、非关系型海量存储数据库（HBase）等。消费者在Kafka系统中承担着数据分流的角色。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">提示： 数据分流顾名思义就是将一份数据分别写入到不同的地方。在大数据领域中，例如Kafka系统中集中存储了业务数据，用户通过消费者实例，读取了Kafka系统中的业务数据，经过业务处理后，结果需要写到不同的及时查询存储介质中。这个过程就是一个典型的数据分流过程。</span></pre> </div> <h3>2.1.3 Topic（主题）</h3> <p> 主题即业务数据在Kafka系统中的分类集合，通常情况下，相同类型的业务数据会存储在同一个主题下。 主题的主要作用是将不同的业务数据分类存储，便于Kafka系统统一维护和管理业务数据。对比关系型数据库，主题在Kafka系统中“扮演”的角色和关系型数据库中表的角色很类似。</p> <h3>2.1.4 Broker（代理节点）</h3> <p>代理节点即Kafka系统中服务节点，通常情况下，Kafka系统中一台服务器主机被称为Kafka系统的一个代理节点。</p> <p>代理节点的主要作用是负责消息数据的存储、为客户端提供服务、保证Kafka系统的正常运行等。代理节点是Kafka系统组建集群的最小单位，一个Kafka集群由一个代理节点或者多个代理节点组成。</p> <h3>2.1.5 Zookeeper</h3> <p>Zookeeper即Kafka集群元数据管理系统，由于Kafka系统是一个分布式消息系统，由于分布式的原因，Kafka系统需要Zookeeper来协调管理服务。</p> <p>Zookeeper在Kafka系统中主要作用是选举主题分区Leader、协调各个代理节点服务、存储Kafka元数据信息等。</p> <p>在新版本Kafka系统中，Kafka系统对于新的消费者实例使用了Kafka内部的消费者组协调协议，减少了对Zookeeper的依赖。这时的Zookeeper对于Kafka系统来说，更像是一个小型的分布式元数据存储系统。</p> <h2>2.2 核心组件元数据分布</h2> <p>Kafka系统中，核心组件的元数据信息均存储在Zookeeper系统。这些元数据信息具体包含控制器选举次数、代理节点和主题、配置、管理员操作、控制器、以及老版本消费者实例。这些元数据信息在Zookeeper系统中的分布，如下图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/43cf182d26cdd6f362e3c86f63636d64.jpg" alt="Kafka核心组件详解_在线工具"></p> <p> </p> <p> </p> <h3>2.2.1 控制器选举次数</h3> <p>Kafka系统中的控制器每进行一次选举次数，都会在Zookeeper系统/controller_epoch节点下进行记录。该值为一个数字，Kafka集群中第一个代理节点（Broker）启动时该值为1。</p> <p>Kafka集群中,如果遇到代理节点宕机或者变更，那么Kafka集群会重新选举新的控制器。每次控制器发生变化时，在Zookeeper系统/controller_epoch节点中的值就会加1。</p> <h3>2.2.2 Broker和Topic</h3> <p>在Zookeeper系统/brokers节点中存储着Kafka代理节点和主题的元数据信息。</p> <p>其中，Zookeeper系统/brokers/ids节点中存储着代理节点的ID值。Zookeeper系统/brokers/topics节点中存储着主题和分区的元数据信息。</p> <h3>2.2.3 配置</h3> <p>Kafka系统中修改主题属性这类操作，会被存储到Zookeeper系统/config节点，/config节点主要包含三个子节点，分别是：</p> <ul> <li> <strong>topic</strong>：存储Kafka集群主题的额外属性，比如修改过主题的属性操作；</li> <li> <strong>client</strong>：客户端和主题配置被重写，包含消费者应用和生产者应用；</li> <li> <strong>changes</strong>：配置修改通知。</li> </ul> <h3>2.2.4 管理员操作</h3> <p>在执行管理员操作时，比如删除、分配等。在Zookeeper系统/admin节点会生成相应的子节点，内容如下：</p> <ul> <li>delete_topics：标记待删除的主题名； </li> <li>reassign_partitions：重新分配分区操作；</li> <li>preferred_replica_election：恢复Leader分区平衡操作。</li> </ul> <h3>2.2.5 控制器</h3> <p>Kafka系统正常运行时，在Zookeeper系统/controller节点下会存储一个Kafka代理节点的ID值，该ID值与Kafka代理节点ID相同，表示代理节点上存在控制器功能。</p> <h3>2.2.6 老版本消费者实例</h3> <p>在消费者实例中，如果使用kafka.tools.ConsoleConsumer接口去读取Kafka主题数据，则会产生Zookeeper系统/consumers节点。</p> <p>在Zookeeper系统/consumers节点中，存在若干个消费者组子节点，每个消费者组子节点下又会存在三个子子节点：</p> <ul> <li>消费者线程ID（Zookeeper系统/consumers/ids）；</li> <li>消费者产生的偏移量（Zookeeper系统/consumers/offsets）；</li> <li>消费者线程和分区的对应关系（Zookeeper系统/consumers/owners）。</li> </ul> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">注意： 如果使用的是Kafka新版本消费者接口，则消费者实例产生的元数据信息不会存储在Zookeeper系统</span>/consumers节点中，而是存储在Kafka系统的内部主题中。</pre> </div> </h1> <ul> <li>Broker：Kafka集群组建的最小单位，消息中间件的代理节点；</li> <li>Topic：用来区分不同的业务消息，类似于数据库中的表；</li> <li>Partition：Topic物理意义上的分组，一个Topic可以分为多个Partition，每个Partition是一个有序的队列；</li> <li>Segment：每个Partition又可以分为多个Segment文件；</li> <li>Offset：每个Partition都由一系列有序的、不可修改的消息组成，这些消息被持续追加到Partition中，Partition中的每条消息记录都有一个连续的序号，用来标识这条消息的唯一性；</li> <li>Message：Kafka系统中，文件存储的最小存储单位。</li> </ul> <p>Kafka系统中的Message是以Topic为基本单位，不同的Topic之间是相互独立、互不干扰的。每个Topic又可以分为若干个Partition，每个Partition用来存储一部分的Message。</p> <h2>3.1 分区存储</h2> <p>Kafka系统在创建主题时，它会规划将分区分配到各个代理节点（Broker）。例如，现有3个代理节点，准备创建一个包含6个分区、3个副本的主题，那么Kafka系统就会有18个分区副本，这18个分区副本能够被分配到3个代理节点。</p> <p>在Kafka系统中，一个主题（Topic）下包含多个不同的分区（Partition），每个分区为单独的一个目录，分区的命名规则为：主题名+有序序号，第一个分区的序号从正整数0开始，序号最大值等于分区总数减1。 主题的存储路径由“log.dirs”属性决定，切换到代理节点中主题分区的存储分布，结果如图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/5b3333eef25ff64f779d00bc9f19b857.jpg" alt="Kafka核心组件详解_在线工具"></p> <p>每个分区相当于一个超大的文件被均匀分配成若干个大小相等的片段（Segment），但是每个片段的消息数据量不一定是相等的，正因为这种特性的存在，方面过期的片段数据能够被快速的删除。 片段文件的生命周期由代理节点server.properties文件中配置的参数决定，这样快速删除无用的数据，可以有效的提高磁盘利用率。</p> <p>片段文件由索引文件和数据文件组成，其中后缀为“.index”表示索引文件，后缀为“.log”的表示数据文件，查看某一个分区的片段，输出结果如下图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/7455ac0c49c42363cd877d22d5b0cca6.jpg" alt="Kafka核心组件详解_在线工具"></p> <p> </p> <p> </p> <p> Kafka系统中的索引文件并没有给数据文件中的每条消息记录都建立索引，而是采用了稀疏存储的方式，每隔一定字节的数据来建立一条索引。如下图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/f2a70782d22b5fcf9690c0e1fca267bf.jpg" alt="Kafka核心组件详解_在线工具"></p> <p> </p> <p> </p> <p> </p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">提示： 通过稀疏存储索引的方式，避免了索引文件占用过多的磁盘空间。从而将索引文件存储在内存中，虽然没有建立索引的Message不能一次性定位到所在的数据文件上的位置，但是因为有稀疏索引的存在，会极大的缩小顺序扫描的范围。</span></pre> </div> <h2>3.2 消息格式</h2> <p> 对于普通日志来说，一条记录以“\n”结尾，或者通过其他特殊的分隔符来拆分，这样就可以从文件中拆分出一条条的记录。但是这种方式对于文本来说比较适合，对Kafka系统来说，需要的是一种二进制格式。 因此，Kafka系统使用了一种经典的消息格式，在消息前面固定长度的几个字节中记录这条消息的大小（单位为byte）。在Kafka系统消息协议中，消息的具体格式见代码如下：</p> <div class="cnblogs_code"> <pre>Message =&gt;<span style="color: rgba(0, 0, 0, 1)"> Crc MagicByte Attributes Key Value   Crc </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> int32   MagicByte </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> int8   Attributes </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> int8   Timestamp </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> int64   Key </span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> bytes   Value </span>=&gt; bytes</pre> </div> <p>这些字段含义如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220430/da098184bfd91e7beaa20717287eb1d6.jpg" alt="Kafka核心组件详解_在线工具"></p> <p> </p> <p> </p> </h1> <p>Kafka系统在清理过期的消息数据时，提供了两种清除策略。它们分别是：</p> <ul> <li>基于时间和大小的删除策略；</li> <li>压缩（Compact）清理策略。</li> </ul> <p>这两种策略通过属性“log.cleanup.policy”来控制，可选值包含“delete”、“compact”，其默认值为“delete”。</p> <span class="directory"></span><h4 id="title-0">1.删除策略</h4> <p>按照时间来配置删除策略，配置内容：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># 系统默认保存7天 log.retention.hours</span>=<span style="color: rgba(128, 0, 128, 1)">168</span></pre> </div> <p>按照保留大小来删除过期数据，配置内容：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)"># 系统默认没有设置大小 log.retention.bytes</span>=-<span style="color: rgba(128, 0, 128, 1)">1</span></pre> </div> <p>另外，也可以同时配置时间和大小，来进行设置混合规则。一旦日志大小超过阀值就清除分区中老的片段数据，或者分区中某个片段的的数据超过保留时间也会被清除。</p> <span class="directory"></span><h4 id="title-1">2.压缩策略</h4> <p>如果要使用压缩策略清除过期日志，需要显示的指定属性“log.cleanup.policy”的值为“compact”。压缩清除，只能针对特定的主题应用，即写的消息数据都包含Key，合并相同Key的消息数据，只留下最新的消息数据。</p> </h1> <p> Kafka核心组件整体来说比较好理解，实际在编写应用程序时，用到比较频繁的就是生产者和消费者，因此，处理学会应用之外，我们还需要更近一步的来了解Kafka的核心组件。</p> </h1> <div id="cnblogs_post_body" class="blogpost-body blogpost-body-html"> <div id="cnblogs_post_body" class="blogpost-body"> <p>这篇博客就和大家分享到这里，如果大家在研究学习的过程当中有什么问题，可以加群进行讨论或发送邮件给我，我会尽我所能为您解答，与君共勉！</p> <p>另外，博主出书了《Hadoop大数据挖掘从入门到进阶实战》，喜欢的朋友或同学， 可以在公告栏那里点击购买链接购买博主的书进行学习，在此感谢大家的支持。 </p> </div> </div> <div id="cnblogs_post_body" class="blogpost-body"> <p>这篇博客就和大家分享到这里，如果大家在研究学习的过程当中有什么问题，可以加群进行讨论或发送邮件给我，我会尽我所能为您解答，与君共勉！</p> <p>另外，博主出书了《Hadoop大数据挖掘从入门到进阶实战》，喜欢的朋友或同学， 可以在公告栏那里点击购买链接购买博主的书进行学习，在此感谢大家的支持。 </p> </div> <p>这篇博客就和大家分享到这里，如果大家在研究学习的过程当中有什么问题，可以加群进行讨论或发送邮件给我，我会尽我所能为您解答，与君共勉！</p> <p>另外，博主出书了《Hadoop大数据挖掘从入门到进阶实战》，喜欢的朋友或同学， 可以在公告栏那里点击购买链接购买博主的书进行学习，在此感谢大家的支持。 </p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-25453.htm">长沙领养宠物猫在哪里领（长沙领养宠物猫在哪里领养）</a></p>
                                        <p>下一个：<a href="/news/article-25923.htm">宠物粮食排行榜前十名品牌图片（宠物粮食排行榜前十名品牌图片大全）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-8-free-node-subscribe-links.htm" title="「9月8日」最高速度23M/S，2024年XRay每天更新免费节点订阅链接">「9月8日」最高速度23M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-23-winxray-windows.htm" title="「7月23日」最高速度21M/S，2024年XRay每天更新免费节点订阅链接">「7月23日」最高速度21M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-13-latest-winxray-node.htm" title="「9月13日」最高速度19.7M/S，2024年XRay每天更新免费节点订阅链接">「9月13日」最高速度19.7M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-10-node-share.htm" title="「9月10日」最高速度19.4M/S，2024年XRay每天更新免费节点订阅链接">「9月10日」最高速度19.4M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-26-free-winxray-node.htm" title="「8月26日」最高速度19.8M/S，2024年XRay每天更新免费节点订阅链接">「8月26日」最高速度19.8M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-6-free-node-subscribe.htm" title="「12月6日」最高速度22.2M/S，2024年XRay每天更新免费节点订阅链接">「12月6日」最高速度22.2M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-13-winxray-windows.htm" title="「11月13日」最高速度18.1M/S，2024年XRay每天更新免费节点订阅链接">「11月13日」最高速度18.1M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-25453.htm" title="长沙领养宠物猫在哪里领（长沙领养宠物猫在哪里领养）">长沙领养宠物猫在哪里领（长沙领养宠物猫在哪里领养）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-25-today-winxray-node.htm" title="「10月25日」最高速度19.5M/S，2024年XRay每天更新免费节点订阅链接">「10月25日」最高速度19.5M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-20-node-share.htm" title="「9月20日」最高速度22.8M/S，2024年XRay每天更新免费节点订阅链接">「9月20日」最高速度22.8M/S，2024年XRay每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //video section -->

        <!-- footer -->
    <footer class="w3l-footer-29-main">
        <div class="footer-29 py-5">
            <div class="container py-lg-4">
                <div class="row footer-top-29">
                    <div class="col-lg-3 footer-contact-list mt-lg-0 mt-md-5 mt-4">
                        <!-- copyright -->
                        <p class="copy-footer-29 mt-4">
                        XRayNode每日订阅站 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/xraynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/xraynode/jquery.magnific-popup.min.js"></script>
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/xraynode/theme-change.js"></script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!-- bootstrap -->
    <script src="/assets/website/js/frontend/xraynode/bootstrap.min.js"></script>
    <!-- //bootstrap -->
    <!-- //Js scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>